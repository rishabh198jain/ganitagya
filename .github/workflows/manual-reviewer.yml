name: Manual Reviewer Assignment

on:
  pull_request:
    types: [opened, reopened, ready_for_review]

permissions:
  pull-requests: write
  contents: read
  issues: write

jobs:
  assign-reviewer:
    runs-on: ubuntu-latest
    name: Assign Reviewer Manually
    
    steps:
    - name: Assign reviewer using REST API
      run: |
        echo "PR Number: ${{ github.event.number }}"
        echo "Repository: ${{ github.repository }}"
        echo "PR Author: ${{ github.event.pull_request.user.login }}"
        
        # Use GitHub CLI to assign reviewer
        gh pr edit ${{ github.event.number }} --add-reviewer rishabh198jain
        
        echo "✅ Reviewer assignment completed"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Add labels and comment
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.issue.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          // Get PR details
          const { data: pr } = await github.rest.pulls.get({
            owner,
            repo,
            pull_number: prNumber
          });
          
          // Add labels
          const labels = ['needs-review'];
          const title = pr.title.toLowerCase();
          
          if (title.includes('bug') || title.includes('fix')) {
            labels.push('bug');
          }
          if (title.includes('feature') || title.includes('feat')) {
            labels.push('enhancement');
          }
          if (title.includes('docs')) {
            labels.push('documentation');
          }
          
          // Add size label
          const changes = pr.additions + pr.deletions;
          if (changes < 10) labels.push('size/XS');
          else if (changes < 30) labels.push('size/S');
          else if (changes < 100) labels.push('size/M');
          else if (changes < 500) labels.push('size/L');
          else labels.push('size/XL');
          
          try {
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: prNumber,
              labels
            });
            console.log(`✅ Added labels: ${labels.join(', ')}`);
          } catch (error) {
            console.log(`❌ Failed to add labels: ${error.message}`);
          }
          
          // Add comment
          const commentBody = `## 🔍 PR Review Assignment
          
          **Reviewer Assigned**: @rishabh198jain
          
          ### 📊 PR Summary:
          - **Changes**: ${changes} lines (${pr.additions} additions, ${pr.deletions} deletions)
          - **Files Changed**: ${pr.changed_files} files
          - **Labels**: ${labels.join(', ')}
          
          ### ✅ Merge Requirements:
          - [ ] Approval from @rishabh198jain
          - [ ] All status checks passing
          - [ ] Branch up to date with main
          
          ### 🚦 Status:
          Waiting for review and approval before merge can proceed.
          
          ---
          *Auto-generated by GitHub Actions*`;
          
          try {
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: commentBody
            });
            console.log('✅ Added PR comment');
          } catch (error) {
            console.log(`❌ Failed to add comment: ${error.message}`);
          }
