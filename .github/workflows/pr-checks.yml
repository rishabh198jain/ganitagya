name: PR Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      continue-on-error: false
      
    - name: Run TypeScript check
      run: npm run type-check
      continue-on-error: false
      
    - name: Build project
      run: npm run build
      continue-on-error: false
      
    - name: Run tests
      run: npm run test
      continue-on-error: true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: build-files
        path: dist/
        retention-days: 7

  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Check for vulnerabilities
      run: |
        echo "Security audit completed"
        npm audit --audit-level=high --dry-run || echo "High severity vulnerabilities found"

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for console.log statements
      run: |
        if grep -r "console\.log" src/ --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" 2>/dev/null; then
          echo "‚ö†Ô∏è Found console.log statements. Consider removing them for production."
        else
          echo "‚úÖ No console.log statements found"
        fi
      continue-on-error: true
      
    - name: Check for TODO/FIXME comments
      run: |
        if grep -r "TODO\|FIXME" src/ 2>/dev/null; then
          echo "‚ö†Ô∏è Found TODO/FIXME comments. Consider addressing them."
        else
          echo "‚úÖ No TODO/FIXME comments found"
        fi
      continue-on-error: true
      
    - name: Check bundle size
      run: |
        npm run build
        echo "Build completed successfully"
        if [ -d "dist" ]; then
          echo "Bundle size:"
          du -sh dist/
        fi

  all-checks-complete:
    runs-on: ubuntu-latest
    name: All Checks Complete
    needs: [build-and-test, security-audit, code-quality]
    if: always()
    
    steps:
    - name: Check all jobs status
      run: |
        echo "Build and Test: ${{ needs.build-and-test.result }}"
        echo "Security Audit: ${{ needs.security-audit.result }}"
        echo "Code Quality: ${{ needs.code-quality.result }}"
        
        if [ "${{ needs.build-and-test.result }}" != "success" ]; then
          echo "‚ùå Build and test checks failed"
          exit 1
        fi
        
        echo "‚úÖ All required checks completed successfully!"
        echo "üéâ Ready for review and merge!"
