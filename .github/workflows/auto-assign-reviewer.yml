name: Auto Assign Reviewer

on:
  pull_request:
    types: [opened, reopened, ready_for_review]

jobs:
  auto-assign:
    runs-on: ubuntu-latest
    name: Auto Assign Reviewer and Labels
    
    steps:
    - name: Auto assign reviewer
      uses: actions/github-script@v7
      with:
        script: |
          // Auto-assign rishabh198jain as reviewer
          await github.rest.pulls.requestReviewers({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            reviewers: ['rishabh198jain']
          });
          
          // Add appropriate labels based on PR content
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const title = pr.title.toLowerCase();
          const body = pr.body ? pr.body.toLowerCase() : '';
          const labels = [];
          
          // Auto-label based on PR content
          if (title.includes('bug') || title.includes('fix')) {
            labels.push('bug', 'fix');
          }
          
          if (title.includes('feature') || title.includes('feat')) {
            labels.push('enhancement', 'feature');
          }
          
          if (title.includes('docs') || title.includes('documentation')) {
            labels.push('documentation');
          }
          
          if (title.includes('test') || title.includes('testing')) {
            labels.push('testing');
          }
          
          if (title.includes('ci') || title.includes('cd') || title.includes('workflow')) {
            labels.push('ci/cd');
          }
          
          if (title.includes('security') || title.includes('auth')) {
            labels.push('security');
          }
          
          if (title.includes('performance') || title.includes('perf')) {
            labels.push('performance');
          }
          
          if (title.includes('ui') || title.includes('ux') || title.includes('design')) {
            labels.push('ui/ux');
          }
          
          // Check for breaking changes
          if (title.includes('breaking') || body.includes('breaking change')) {
            labels.push('breaking-change');
          }
          
          // Add default labels
          labels.push('needs-review');
          
          // Apply labels if any were determined
          if (labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels
            });
          }
          
          // Add comment with review instructions
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `## üîç Auto-Review Assignment
            
            üëã Hi @rishabh198jain! This PR has been automatically assigned to you for review.
            
            ### üìã Review Checklist:
            - [ ] Code quality and style
            - [ ] Functionality and logic
            - [ ] Security considerations
            - [ ] Performance impact
            - [ ] Documentation updates
            - [ ] Test coverage
            
            ### üö¶ Status Checks:
            All required status checks must pass before this PR can be merged.
            
            ### ‚úÖ Approval Required:
            Your approval is required before the merge button will be enabled.
            
            ---
            *This comment was automatically generated by GitHub Actions.*`
          });

    - name: Check if draft PR
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          if (pr.draft) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['draft', 'work-in-progress']
            });
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## üìù Draft PR Notice
              
              This is a draft PR. Please mark it as "Ready for review" when you're ready for it to be reviewed.
              
              **Note**: Status checks will still run, but review assignment will wait until the PR is ready.`
            });
          }

    - name: Size label assignment
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const additions = pr.additions;
          const deletions = pr.deletions;
          const changes = additions + deletions;
          
          let sizeLabel = '';
          
          if (changes < 10) {
            sizeLabel = 'size/XS';
          } else if (changes < 30) {
            sizeLabel = 'size/S';
          } else if (changes < 100) {
            sizeLabel = 'size/M';
          } else if (changes < 500) {
            sizeLabel = 'size/L';
          } else {
            sizeLabel = 'size/XL';
          }
          
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            labels: [sizeLabel]
          });
          
          // Add comment for large PRs
          if (changes > 500) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## ‚ö†Ô∏è Large PR Notice
              
              This PR contains ${changes} lines of changes. Consider breaking it down into smaller PRs for easier review.
              
              **Large PRs can be harder to:**
              - Review thoroughly
              - Test comprehensively
              - Debug if issues arise
              - Revert if needed`
            });
          }
