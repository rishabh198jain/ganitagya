name: Assign Reviewer

on:
  pull_request:
    types: [opened, reopened, ready_for_review]

permissions:
  pull-requests: write
  contents: read

jobs:
  assign-reviewer:
    runs-on: ubuntu-latest
    name: Auto Assign Reviewer
    
    steps:
    - name: Assign reviewer and add labels
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.issue.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          console.log(`Processing PR #${prNumber} in ${owner}/${repo}`);
          
          // Get PR details
          const { data: pr } = await github.rest.pulls.get({
            owner,
            repo,
            pull_number: prNumber
          });
          
          console.log(`PR Title: ${pr.title}`);
          console.log(`PR Author: ${pr.user.login}`);
          console.log(`PR Draft: ${pr.draft}`);
          
          // Don't assign reviewer if PR author is the target reviewer
          if (pr.user.login === 'rishabh198jain') {
            console.log('PR author is the target reviewer, skipping auto-assignment');
          } else {
            // Try to assign reviewer
            try {
              await github.rest.pulls.requestReviewers({
                owner,
                repo,
                pull_number: prNumber,
                reviewers: ['rishabh198jain']
              });
              console.log('‚úÖ Successfully assigned reviewer: rishabh198jain');
            } catch (error) {
              console.log(`‚ùå Failed to assign reviewer: ${error.message}`);
            }
          }
          
          // Add labels based on PR content
          const title = pr.title.toLowerCase();
          const labels = ['needs-review'];
          
          if (title.includes('bug') || title.includes('fix')) {
            labels.push('bug');
          }
          if (title.includes('feature') || title.includes('feat')) {
            labels.push('enhancement');
          }
          if (title.includes('docs')) {
            labels.push('documentation');
          }
          if (title.includes('ci') || title.includes('workflow')) {
            labels.push('ci/cd');
          }
          
          // Add size label
          const changes = pr.additions + pr.deletions;
          if (changes < 10) labels.push('size/XS');
          else if (changes < 30) labels.push('size/S');
          else if (changes < 100) labels.push('size/M');
          else if (changes < 500) labels.push('size/L');
          else labels.push('size/XL');
          
          // Apply labels
          try {
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: prNumber,
              labels
            });
            console.log(`‚úÖ Added labels: ${labels.join(', ')}`);
          } catch (error) {
            console.log(`‚ùå Failed to add labels: ${error.message}`);
          }
          
          // Add helpful comment
          const commentBody = `## üîç PR Auto-Assignment
          
          Hi @rishabh198jain! This PR has been automatically processed:
          
          ### üìä PR Details:
          - **Size**: ${changes} lines changed
          - **Type**: ${labels.filter(l => !l.startsWith('size/') && l !== 'needs-review').join(', ') || 'General'}
          - **Status**: ${pr.draft ? 'Draft' : 'Ready for Review'}
          
          ### ‚úÖ Required for Merge:
          - [ ] Your approval as code owner
          - [ ] All status checks passing
          - [ ] Branch up to date with main
          
          ### üö¶ Current Status:
          Status checks will run automatically. Please review when ready!
          
          ---
          *Auto-generated by GitHub Actions*`;
          
          try {
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: commentBody
            });
            console.log('‚úÖ Added informational comment');
          } catch (error) {
            console.log(`‚ùå Failed to add comment: ${error.message}`);
          }
